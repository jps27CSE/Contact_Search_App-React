{"version":3,"sources":["components/card/cardComponent.js","components/card-list/card-listComponent.js","components/search-box/search-boxComponent.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","person","id","name","CardList","persons","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filterSearch","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yTAEaA,EAAM,SAACC,GAAD,OACf,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,OAAOC,GAAvC,gBACtB,6BAAKL,EAAMI,OAAOE,WCFbC,EAAW,SAACP,GACrB,OACI,qBAAKC,UAAU,YAAf,SAEQD,EAAMQ,QAAQC,KAAI,SAAAL,GAAM,OACpB,cAAC,EAAD,CAAsBA,OAAQA,GAAnBA,EAAOC,UCLzBK,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OACrB,uBAAOX,UAAU,SAASY,KAAK,SAASF,YAAaA,EACjDG,SAAUF,MCyCHG,E,kDAxCb,aAAe,IAAD,8BACZ,gBAQFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAPtC,EAAKC,MAAQ,CACXb,QAAS,GACTU,YAAa,IALH,E,qDAad,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAET,QAASkB,S,oBAG5C,WAEE,MAAiCC,KAAKN,MAA9Bb,EAAR,EAAQA,QAASU,EAAjB,EAAiBA,YAEXU,EAAepB,EAAQqB,QAAO,SAAAzB,GAAM,OACxCA,EAAOE,KAAKwB,cAAcC,SAASb,EAAYY,kBAGjD,OACE,sBAAK7B,UAAU,MAAf,UACE,yCACA,cAAC,EAAD,CACEU,YAAY,SACZC,aAAce,KAAKf,eAErB,cAAC,EAAD,CAAUJ,QAASoB,W,GApCTI,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7439ce99.chunk.js","sourcesContent":["import React from 'react'\r\nimport './cardStyle.css'\r\nexport const Card =(props)=> (\r\n    <div className=\"card-container\">\r\n        <img alt='persons' src={`https://robohash.org/${props.person.id}?set=set4 `}/>\r\n        <h1>{props.person.name}</h1>\r\n    </div>\r\n)","import React from 'react'\r\nimport './card-listStyle.css'\r\nimport { Card } from '../card/cardComponent'\r\nexport const CardList = (props) => {\r\n    return (\r\n        <div className=\"card-list\">\r\n            {\r\n                props.persons.map(person => (\r\n                    <Card key={person.id} person={person} />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './search-boxStyle.css'\r\n\r\nexport const SearchBox = ({placeholder,handleChange}) => (\r\n    <input className=\"search\" type=\"search\" placeholder={placeholder}\r\n        onChange={handleChange}\r\n    />\r\n)","import './App.css';\r\nimport React, { Component } from 'react';\r\nimport { CardList } from './components/card-list/card-listComponent';\r\nimport { SearchBox } from './components/search-box/search-boxComponent'\r\nclass App extends Component {\r\n\r\n  constructor() {\r\n    super()\r\n\r\n    this.state = {\r\n      persons: [],\r\n      searchField: ''\r\n    }\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ searchField: e.target.value })\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n      .then(response => response.json())\r\n      .then(users => this.setState({ persons: users }))\r\n  }\r\n\r\n  render() {\r\n\r\n    const { persons, searchField } = this.state\r\n\r\n    const filterSearch = persons.filter(person =>\r\n      person.name.toLowerCase().includes(searchField.toLowerCase())\r\n    )\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>Contact</h1>\r\n        <SearchBox\r\n          placeholder=\"Search\"\r\n          handleChange={this.handleChange}\r\n        />\r\n        <CardList persons={filterSearch} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}